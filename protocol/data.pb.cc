// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Broker {
class DataDescriptorDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DataDescriptor> {
} _DataDescriptor_default_instance_;
class DataRegistrationDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DataRegistration> {
} _DataRegistration_default_instance_;
class DataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Data> {
} _Data_default_instance_;
class DataCollectionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DataCollection> {
} _DataCollection_default_instance_;

namespace protobuf_data_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataDescriptor, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataDescriptor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataDescriptor, data_description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataDescriptor, data_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataDescriptor, unit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataDescriptor, data_type_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataRegistration, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataRegistration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataRegistration, provider_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataRegistration, data_decriptors_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, data_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, data_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, data_int32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, data_double_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, data_bool_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, data_string_),
  0,
  2,
  3,
  4,
  5,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataCollection, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataCollection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataCollection, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataCollection, provider_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataCollection, data_provided_),
  1,
  0,
  ~0u,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 8, sizeof(DataDescriptor)},
  { 12, 18, sizeof(DataRegistration)},
  { 20, 30, sizeof(Data)},
  { 36, 43, sizeof(DataCollection)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_DataDescriptor_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DataRegistration_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DataCollection_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "data.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace

void TableStruct::Shutdown() {
  _DataDescriptor_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _DataRegistration_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _Data_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _DataCollection_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _DataDescriptor_default_instance_.DefaultConstruct();
  _DataRegistration_default_instance_.DefaultConstruct();
  _Data_default_instance_.DefaultConstruct();
  _DataCollection_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\ndata.proto\022\006Broker\"w\n\016DataDescriptor\022\030"
      "\n\020data_description\030\001 \001(\t\022\021\n\tdata_name\030\002 "
      "\002(\t\022\014\n\004unit\030\003 \002(\t\022*\n\tdata_type\030\004 \002(\0162\020.B"
      "roker.DataType:\005INT32\"Z\n\020DataRegistratio"
      "n\022\025\n\rprovider_name\030\001 \001(\t\022/\n\017data_decript"
      "ors\030\002 \003(\0132\026.Broker.DataDescriptor\"\226\001\n\004Da"
      "ta\022\021\n\tdata_name\030\001 \002(\t\022*\n\tdata_type\030\002 \002(\016"
      "2\020.Broker.DataType:\005INT32\022\022\n\ndata_int32\030"
      "\003 \001(\005\022\023\n\013data_double\030\004 \001(\001\022\021\n\tdata_bool\030"
      "\005 \001(\010\022\023\n\013data_string\030\006 \001(\t\"_\n\016DataCollec"
      "tion\022\021\n\ttimestamp\030\001 \002(\004\022\025\n\rprovider_name"
      "\030\002 \001(\t\022#\n\rdata_provided\030\003 \003(\0132\014.Broker.D"
      "ata*:\n\010DataType\022\t\n\005INT32\020\000\022\n\n\006DOUBLE\020\001\022\013"
      "\n\007BOOLEAN\020\002\022\n\n\006STRING\020\003"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 543);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "data.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_data_2eproto

const ::google::protobuf::EnumDescriptor* DataType_descriptor() {
  protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_data_2eproto::file_level_enum_descriptors[0];
}
bool DataType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataDescriptor::kDataDescriptionFieldNumber;
const int DataDescriptor::kDataNameFieldNumber;
const int DataDescriptor::kUnitFieldNumber;
const int DataDescriptor::kDataTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataDescriptor::DataDescriptor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Broker.DataDescriptor)
}
DataDescriptor::DataDescriptor(const DataDescriptor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data_description()) {
    data_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_description_);
  }
  data_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data_name()) {
    data_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_name_);
  }
  unit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_unit()) {
    unit_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unit_);
  }
  data_type_ = from.data_type_;
  // @@protoc_insertion_point(copy_constructor:Broker.DataDescriptor)
}

void DataDescriptor::SharedCtor() {
  _cached_size_ = 0;
  data_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_type_ = 0;
}

DataDescriptor::~DataDescriptor() {
  // @@protoc_insertion_point(destructor:Broker.DataDescriptor)
  SharedDtor();
}

void DataDescriptor::SharedDtor() {
  data_description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unit_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DataDescriptor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataDescriptor::descriptor() {
  protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_data_2eproto::file_level_metadata[0].descriptor;
}

const DataDescriptor& DataDescriptor::default_instance() {
  protobuf_data_2eproto::InitDefaults();
  return *internal_default_instance();
}

DataDescriptor* DataDescriptor::New(::google::protobuf::Arena* arena) const {
  DataDescriptor* n = new DataDescriptor;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DataDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:Broker.DataDescriptor)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_data_description()) {
      GOOGLE_DCHECK(!data_description_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*data_description_.UnsafeRawStringPointer())->clear();
    }
    if (has_data_name()) {
      GOOGLE_DCHECK(!data_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*data_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_unit()) {
      GOOGLE_DCHECK(!unit_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*unit_.UnsafeRawStringPointer())->clear();
    }
  }
  data_type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DataDescriptor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Broker.DataDescriptor)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data_description = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data_description().data(), this->data_description().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Broker.DataDescriptor.data_description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string data_name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data_name().data(), this->data_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Broker.DataDescriptor.data_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string unit = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unit()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->unit().data(), this->unit().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Broker.DataDescriptor.unit");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .Broker.DataType data_type = 4 [default = INT32];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(32u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Broker::DataType_IsValid(value)) {
            set_data_type(static_cast< ::Broker::DataType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Broker.DataDescriptor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Broker.DataDescriptor)
  return false;
#undef DO_
}

void DataDescriptor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Broker.DataDescriptor)
  // optional string data_description = 1;
  if (has_data_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data_description().data(), this->data_description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Broker.DataDescriptor.data_description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data_description(), output);
  }

  // required string data_name = 2;
  if (has_data_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data_name().data(), this->data_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Broker.DataDescriptor.data_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->data_name(), output);
  }

  // required string unit = 3;
  if (has_unit()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unit().data(), this->unit().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Broker.DataDescriptor.unit");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->unit(), output);
  }

  // required .Broker.DataType data_type = 4 [default = INT32];
  if (has_data_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->data_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Broker.DataDescriptor)
}

::google::protobuf::uint8* DataDescriptor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Broker.DataDescriptor)
  // optional string data_description = 1;
  if (has_data_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data_description().data(), this->data_description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Broker.DataDescriptor.data_description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data_description(), target);
  }

  // required string data_name = 2;
  if (has_data_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data_name().data(), this->data_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Broker.DataDescriptor.data_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->data_name(), target);
  }

  // required string unit = 3;
  if (has_unit()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unit().data(), this->unit().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Broker.DataDescriptor.unit");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->unit(), target);
  }

  // required .Broker.DataType data_type = 4 [default = INT32];
  if (has_data_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->data_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Broker.DataDescriptor)
  return target;
}

size_t DataDescriptor::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Broker.DataDescriptor)
  size_t total_size = 0;

  if (has_data_name()) {
    // required string data_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data_name());
  }

  if (has_unit()) {
    // required string unit = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->unit());
  }

  if (has_data_type()) {
    // required .Broker.DataType data_type = 4 [default = INT32];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->data_type());
  }

  return total_size;
}
size_t DataDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Broker.DataDescriptor)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000e) ^ 0x0000000e) == 0) {  // All required fields are present.
    // required string data_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data_name());

    // required string unit = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->unit());

    // required .Broker.DataType data_type = 4 [default = INT32];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->data_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string data_description = 1;
  if (has_data_description()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data_description());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataDescriptor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Broker.DataDescriptor)
  GOOGLE_DCHECK_NE(&from, this);
  const DataDescriptor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataDescriptor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Broker.DataDescriptor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Broker.DataDescriptor)
    MergeFrom(*source);
  }
}

void DataDescriptor::MergeFrom(const DataDescriptor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Broker.DataDescriptor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 15u) {
    if (from.has_data_description()) {
      set_has_data_description();
      data_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_description_);
    }
    if (from.has_data_name()) {
      set_has_data_name();
      data_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_name_);
    }
    if (from.has_unit()) {
      set_has_unit();
      unit_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unit_);
    }
    if (from.has_data_type()) {
      set_data_type(from.data_type());
    }
  }
}

void DataDescriptor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Broker.DataDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataDescriptor::CopyFrom(const DataDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Broker.DataDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataDescriptor::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;
  return true;
}

void DataDescriptor::Swap(DataDescriptor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataDescriptor::InternalSwap(DataDescriptor* other) {
  data_description_.Swap(&other->data_description_);
  data_name_.Swap(&other->data_name_);
  unit_.Swap(&other->unit_);
  std::swap(data_type_, other->data_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DataDescriptor::GetMetadata() const {
  protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_data_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DataDescriptor

// optional string data_description = 1;
bool DataDescriptor::has_data_description() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DataDescriptor::set_has_data_description() {
  _has_bits_[0] |= 0x00000001u;
}
void DataDescriptor::clear_has_data_description() {
  _has_bits_[0] &= ~0x00000001u;
}
void DataDescriptor::clear_data_description() {
  data_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data_description();
}
const ::std::string& DataDescriptor::data_description() const {
  // @@protoc_insertion_point(field_get:Broker.DataDescriptor.data_description)
  return data_description_.GetNoArena();
}
void DataDescriptor::set_data_description(const ::std::string& value) {
  set_has_data_description();
  data_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Broker.DataDescriptor.data_description)
}
#if LANG_CXX11
void DataDescriptor::set_data_description(::std::string&& value) {
  set_has_data_description();
  data_description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Broker.DataDescriptor.data_description)
}
#endif
void DataDescriptor::set_data_description(const char* value) {
  set_has_data_description();
  data_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Broker.DataDescriptor.data_description)
}
void DataDescriptor::set_data_description(const char* value, size_t size) {
  set_has_data_description();
  data_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Broker.DataDescriptor.data_description)
}
::std::string* DataDescriptor::mutable_data_description() {
  set_has_data_description();
  // @@protoc_insertion_point(field_mutable:Broker.DataDescriptor.data_description)
  return data_description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DataDescriptor::release_data_description() {
  // @@protoc_insertion_point(field_release:Broker.DataDescriptor.data_description)
  clear_has_data_description();
  return data_description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DataDescriptor::set_allocated_data_description(::std::string* data_description) {
  if (data_description != NULL) {
    set_has_data_description();
  } else {
    clear_has_data_description();
  }
  data_description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_description);
  // @@protoc_insertion_point(field_set_allocated:Broker.DataDescriptor.data_description)
}

// required string data_name = 2;
bool DataDescriptor::has_data_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DataDescriptor::set_has_data_name() {
  _has_bits_[0] |= 0x00000002u;
}
void DataDescriptor::clear_has_data_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void DataDescriptor::clear_data_name() {
  data_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data_name();
}
const ::std::string& DataDescriptor::data_name() const {
  // @@protoc_insertion_point(field_get:Broker.DataDescriptor.data_name)
  return data_name_.GetNoArena();
}
void DataDescriptor::set_data_name(const ::std::string& value) {
  set_has_data_name();
  data_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Broker.DataDescriptor.data_name)
}
#if LANG_CXX11
void DataDescriptor::set_data_name(::std::string&& value) {
  set_has_data_name();
  data_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Broker.DataDescriptor.data_name)
}
#endif
void DataDescriptor::set_data_name(const char* value) {
  set_has_data_name();
  data_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Broker.DataDescriptor.data_name)
}
void DataDescriptor::set_data_name(const char* value, size_t size) {
  set_has_data_name();
  data_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Broker.DataDescriptor.data_name)
}
::std::string* DataDescriptor::mutable_data_name() {
  set_has_data_name();
  // @@protoc_insertion_point(field_mutable:Broker.DataDescriptor.data_name)
  return data_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DataDescriptor::release_data_name() {
  // @@protoc_insertion_point(field_release:Broker.DataDescriptor.data_name)
  clear_has_data_name();
  return data_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DataDescriptor::set_allocated_data_name(::std::string* data_name) {
  if (data_name != NULL) {
    set_has_data_name();
  } else {
    clear_has_data_name();
  }
  data_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_name);
  // @@protoc_insertion_point(field_set_allocated:Broker.DataDescriptor.data_name)
}

// required string unit = 3;
bool DataDescriptor::has_unit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DataDescriptor::set_has_unit() {
  _has_bits_[0] |= 0x00000004u;
}
void DataDescriptor::clear_has_unit() {
  _has_bits_[0] &= ~0x00000004u;
}
void DataDescriptor::clear_unit() {
  unit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_unit();
}
const ::std::string& DataDescriptor::unit() const {
  // @@protoc_insertion_point(field_get:Broker.DataDescriptor.unit)
  return unit_.GetNoArena();
}
void DataDescriptor::set_unit(const ::std::string& value) {
  set_has_unit();
  unit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Broker.DataDescriptor.unit)
}
#if LANG_CXX11
void DataDescriptor::set_unit(::std::string&& value) {
  set_has_unit();
  unit_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Broker.DataDescriptor.unit)
}
#endif
void DataDescriptor::set_unit(const char* value) {
  set_has_unit();
  unit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Broker.DataDescriptor.unit)
}
void DataDescriptor::set_unit(const char* value, size_t size) {
  set_has_unit();
  unit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Broker.DataDescriptor.unit)
}
::std::string* DataDescriptor::mutable_unit() {
  set_has_unit();
  // @@protoc_insertion_point(field_mutable:Broker.DataDescriptor.unit)
  return unit_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DataDescriptor::release_unit() {
  // @@protoc_insertion_point(field_release:Broker.DataDescriptor.unit)
  clear_has_unit();
  return unit_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DataDescriptor::set_allocated_unit(::std::string* unit) {
  if (unit != NULL) {
    set_has_unit();
  } else {
    clear_has_unit();
  }
  unit_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), unit);
  // @@protoc_insertion_point(field_set_allocated:Broker.DataDescriptor.unit)
}

// required .Broker.DataType data_type = 4 [default = INT32];
bool DataDescriptor::has_data_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void DataDescriptor::set_has_data_type() {
  _has_bits_[0] |= 0x00000008u;
}
void DataDescriptor::clear_has_data_type() {
  _has_bits_[0] &= ~0x00000008u;
}
void DataDescriptor::clear_data_type() {
  data_type_ = 0;
  clear_has_data_type();
}
::Broker::DataType DataDescriptor::data_type() const {
  // @@protoc_insertion_point(field_get:Broker.DataDescriptor.data_type)
  return static_cast< ::Broker::DataType >(data_type_);
}
void DataDescriptor::set_data_type(::Broker::DataType value) {
  assert(::Broker::DataType_IsValid(value));
  set_has_data_type();
  data_type_ = value;
  // @@protoc_insertion_point(field_set:Broker.DataDescriptor.data_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataRegistration::kProviderNameFieldNumber;
const int DataRegistration::kDataDecriptorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataRegistration::DataRegistration()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Broker.DataRegistration)
}
DataRegistration::DataRegistration(const DataRegistration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      data_decriptors_(from.data_decriptors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  provider_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_provider_name()) {
    provider_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.provider_name_);
  }
  // @@protoc_insertion_point(copy_constructor:Broker.DataRegistration)
}

void DataRegistration::SharedCtor() {
  _cached_size_ = 0;
  provider_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DataRegistration::~DataRegistration() {
  // @@protoc_insertion_point(destructor:Broker.DataRegistration)
  SharedDtor();
}

void DataRegistration::SharedDtor() {
  provider_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DataRegistration::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataRegistration::descriptor() {
  protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_data_2eproto::file_level_metadata[1].descriptor;
}

const DataRegistration& DataRegistration::default_instance() {
  protobuf_data_2eproto::InitDefaults();
  return *internal_default_instance();
}

DataRegistration* DataRegistration::New(::google::protobuf::Arena* arena) const {
  DataRegistration* n = new DataRegistration;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DataRegistration::Clear() {
// @@protoc_insertion_point(message_clear_start:Broker.DataRegistration)
  data_decriptors_.Clear();
  if (has_provider_name()) {
    GOOGLE_DCHECK(!provider_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*provider_name_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DataRegistration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Broker.DataRegistration)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string provider_name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_provider_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->provider_name().data(), this->provider_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Broker.DataRegistration.provider_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Broker.DataDescriptor data_decriptors = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data_decriptors()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Broker.DataRegistration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Broker.DataRegistration)
  return false;
#undef DO_
}

void DataRegistration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Broker.DataRegistration)
  // optional string provider_name = 1;
  if (has_provider_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->provider_name().data(), this->provider_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Broker.DataRegistration.provider_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->provider_name(), output);
  }

  // repeated .Broker.DataDescriptor data_decriptors = 2;
  for (unsigned int i = 0, n = this->data_decriptors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data_decriptors(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Broker.DataRegistration)
}

::google::protobuf::uint8* DataRegistration::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Broker.DataRegistration)
  // optional string provider_name = 1;
  if (has_provider_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->provider_name().data(), this->provider_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Broker.DataRegistration.provider_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->provider_name(), target);
  }

  // repeated .Broker.DataDescriptor data_decriptors = 2;
  for (unsigned int i = 0, n = this->data_decriptors_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->data_decriptors(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Broker.DataRegistration)
  return target;
}

size_t DataRegistration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Broker.DataRegistration)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .Broker.DataDescriptor data_decriptors = 2;
  {
    unsigned int count = this->data_decriptors_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data_decriptors(i));
    }
  }

  // optional string provider_name = 1;
  if (has_provider_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->provider_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataRegistration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Broker.DataRegistration)
  GOOGLE_DCHECK_NE(&from, this);
  const DataRegistration* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataRegistration>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Broker.DataRegistration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Broker.DataRegistration)
    MergeFrom(*source);
  }
}

void DataRegistration::MergeFrom(const DataRegistration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Broker.DataRegistration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_decriptors_.MergeFrom(from.data_decriptors_);
  if (from.has_provider_name()) {
    set_has_provider_name();
    provider_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.provider_name_);
  }
}

void DataRegistration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Broker.DataRegistration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataRegistration::CopyFrom(const DataRegistration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Broker.DataRegistration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataRegistration::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->data_decriptors())) return false;
  return true;
}

void DataRegistration::Swap(DataRegistration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataRegistration::InternalSwap(DataRegistration* other) {
  data_decriptors_.UnsafeArenaSwap(&other->data_decriptors_);
  provider_name_.Swap(&other->provider_name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DataRegistration::GetMetadata() const {
  protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_data_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DataRegistration

// optional string provider_name = 1;
bool DataRegistration::has_provider_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DataRegistration::set_has_provider_name() {
  _has_bits_[0] |= 0x00000001u;
}
void DataRegistration::clear_has_provider_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void DataRegistration::clear_provider_name() {
  provider_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_provider_name();
}
const ::std::string& DataRegistration::provider_name() const {
  // @@protoc_insertion_point(field_get:Broker.DataRegistration.provider_name)
  return provider_name_.GetNoArena();
}
void DataRegistration::set_provider_name(const ::std::string& value) {
  set_has_provider_name();
  provider_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Broker.DataRegistration.provider_name)
}
#if LANG_CXX11
void DataRegistration::set_provider_name(::std::string&& value) {
  set_has_provider_name();
  provider_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Broker.DataRegistration.provider_name)
}
#endif
void DataRegistration::set_provider_name(const char* value) {
  set_has_provider_name();
  provider_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Broker.DataRegistration.provider_name)
}
void DataRegistration::set_provider_name(const char* value, size_t size) {
  set_has_provider_name();
  provider_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Broker.DataRegistration.provider_name)
}
::std::string* DataRegistration::mutable_provider_name() {
  set_has_provider_name();
  // @@protoc_insertion_point(field_mutable:Broker.DataRegistration.provider_name)
  return provider_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DataRegistration::release_provider_name() {
  // @@protoc_insertion_point(field_release:Broker.DataRegistration.provider_name)
  clear_has_provider_name();
  return provider_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DataRegistration::set_allocated_provider_name(::std::string* provider_name) {
  if (provider_name != NULL) {
    set_has_provider_name();
  } else {
    clear_has_provider_name();
  }
  provider_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), provider_name);
  // @@protoc_insertion_point(field_set_allocated:Broker.DataRegistration.provider_name)
}

// repeated .Broker.DataDescriptor data_decriptors = 2;
int DataRegistration::data_decriptors_size() const {
  return data_decriptors_.size();
}
void DataRegistration::clear_data_decriptors() {
  data_decriptors_.Clear();
}
const ::Broker::DataDescriptor& DataRegistration::data_decriptors(int index) const {
  // @@protoc_insertion_point(field_get:Broker.DataRegistration.data_decriptors)
  return data_decriptors_.Get(index);
}
::Broker::DataDescriptor* DataRegistration::mutable_data_decriptors(int index) {
  // @@protoc_insertion_point(field_mutable:Broker.DataRegistration.data_decriptors)
  return data_decriptors_.Mutable(index);
}
::Broker::DataDescriptor* DataRegistration::add_data_decriptors() {
  // @@protoc_insertion_point(field_add:Broker.DataRegistration.data_decriptors)
  return data_decriptors_.Add();
}
::google::protobuf::RepeatedPtrField< ::Broker::DataDescriptor >*
DataRegistration::mutable_data_decriptors() {
  // @@protoc_insertion_point(field_mutable_list:Broker.DataRegistration.data_decriptors)
  return &data_decriptors_;
}
const ::google::protobuf::RepeatedPtrField< ::Broker::DataDescriptor >&
DataRegistration::data_decriptors() const {
  // @@protoc_insertion_point(field_list:Broker.DataRegistration.data_decriptors)
  return data_decriptors_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Data::kDataNameFieldNumber;
const int Data::kDataTypeFieldNumber;
const int Data::kDataInt32FieldNumber;
const int Data::kDataDoubleFieldNumber;
const int Data::kDataBoolFieldNumber;
const int Data::kDataStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Data::Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Broker.Data)
}
Data::Data(const Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data_name()) {
    data_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_name_);
  }
  data_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data_string()) {
    data_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_string_);
  }
  ::memcpy(&data_type_, &from.data_type_,
    reinterpret_cast<char*>(&data_bool_) -
    reinterpret_cast<char*>(&data_type_) + sizeof(data_bool_));
  // @@protoc_insertion_point(copy_constructor:Broker.Data)
}

void Data::SharedCtor() {
  _cached_size_ = 0;
  data_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_type_, 0, reinterpret_cast<char*>(&data_bool_) -
    reinterpret_cast<char*>(&data_type_) + sizeof(data_bool_));
}

Data::~Data() {
  // @@protoc_insertion_point(destructor:Broker.Data)
  SharedDtor();
}

void Data::SharedDtor() {
  data_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Data::descriptor() {
  protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_data_2eproto::file_level_metadata[2].descriptor;
}

const Data& Data::default_instance() {
  protobuf_data_2eproto::InitDefaults();
  return *internal_default_instance();
}

Data* Data::New(::google::protobuf::Arena* arena) const {
  Data* n = new Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Data::Clear() {
// @@protoc_insertion_point(message_clear_start:Broker.Data)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_data_name()) {
      GOOGLE_DCHECK(!data_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*data_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_data_string()) {
      GOOGLE_DCHECK(!data_string_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*data_string_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 60u) {
    ::memset(&data_type_, 0, reinterpret_cast<char*>(&data_bool_) -
      reinterpret_cast<char*>(&data_type_) + sizeof(data_bool_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Broker.Data)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string data_name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data_name().data(), this->data_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Broker.Data.data_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .Broker.DataType data_type = 2 [default = INT32];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Broker::DataType_IsValid(value)) {
            set_data_type(static_cast< ::Broker::DataType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 data_int32 = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(24u)) {
          set_has_data_int32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_int32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double data_double = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(33u)) {
          set_has_data_double();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &data_double_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool data_bool = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(40u)) {
          set_has_data_bool();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &data_bool_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string data_string = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data_string().data(), this->data_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Broker.Data.data_string");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Broker.Data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Broker.Data)
  return false;
#undef DO_
}

void Data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Broker.Data)
  // required string data_name = 1;
  if (has_data_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data_name().data(), this->data_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Broker.Data.data_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data_name(), output);
  }

  // required .Broker.DataType data_type = 2 [default = INT32];
  if (has_data_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->data_type(), output);
  }

  // optional int32 data_int32 = 3;
  if (has_data_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->data_int32(), output);
  }

  // optional double data_double = 4;
  if (has_data_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->data_double(), output);
  }

  // optional bool data_bool = 5;
  if (has_data_bool()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->data_bool(), output);
  }

  // optional string data_string = 6;
  if (has_data_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data_string().data(), this->data_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Broker.Data.data_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->data_string(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Broker.Data)
}

::google::protobuf::uint8* Data::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Broker.Data)
  // required string data_name = 1;
  if (has_data_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data_name().data(), this->data_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Broker.Data.data_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data_name(), target);
  }

  // required .Broker.DataType data_type = 2 [default = INT32];
  if (has_data_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->data_type(), target);
  }

  // optional int32 data_int32 = 3;
  if (has_data_int32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->data_int32(), target);
  }

  // optional double data_double = 4;
  if (has_data_double()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->data_double(), target);
  }

  // optional bool data_bool = 5;
  if (has_data_bool()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->data_bool(), target);
  }

  // optional string data_string = 6;
  if (has_data_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data_string().data(), this->data_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Broker.Data.data_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->data_string(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Broker.Data)
  return target;
}

size_t Data::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Broker.Data)
  size_t total_size = 0;

  if (has_data_name()) {
    // required string data_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data_name());
  }

  if (has_data_type()) {
    // required .Broker.DataType data_type = 2 [default = INT32];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->data_type());
  }

  return total_size;
}
size_t Data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Broker.Data)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required string data_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data_name());

    // required .Broker.DataType data_type = 2 [default = INT32];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->data_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string data_string = 6;
  if (has_data_string()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data_string());
  }

  if (_has_bits_[0 / 32] & 56u) {
    // optional int32 data_int32 = 3;
    if (has_data_int32()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->data_int32());
    }

    // optional double data_double = 4;
    if (has_data_double()) {
      total_size += 1 + 8;
    }

    // optional bool data_bool = 5;
    if (has_data_bool()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Broker.Data)
  GOOGLE_DCHECK_NE(&from, this);
  const Data* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Data>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Broker.Data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Broker.Data)
    MergeFrom(*source);
  }
}

void Data::MergeFrom(const Data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Broker.Data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 63u) {
    if (from.has_data_name()) {
      set_has_data_name();
      data_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_name_);
    }
    if (from.has_data_string()) {
      set_has_data_string();
      data_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_string_);
    }
    if (from.has_data_type()) {
      set_data_type(from.data_type());
    }
    if (from.has_data_int32()) {
      set_data_int32(from.data_int32());
    }
    if (from.has_data_double()) {
      set_data_double(from.data_double());
    }
    if (from.has_data_bool()) {
      set_data_bool(from.data_bool());
    }
  }
}

void Data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Broker.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Data::CopyFrom(const Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Broker.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Data::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  return true;
}

void Data::Swap(Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Data::InternalSwap(Data* other) {
  data_name_.Swap(&other->data_name_);
  data_string_.Swap(&other->data_string_);
  std::swap(data_type_, other->data_type_);
  std::swap(data_int32_, other->data_int32_);
  std::swap(data_double_, other->data_double_);
  std::swap(data_bool_, other->data_bool_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Data::GetMetadata() const {
  protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_data_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Data

// required string data_name = 1;
bool Data::has_data_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Data::set_has_data_name() {
  _has_bits_[0] |= 0x00000001u;
}
void Data::clear_has_data_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void Data::clear_data_name() {
  data_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data_name();
}
const ::std::string& Data::data_name() const {
  // @@protoc_insertion_point(field_get:Broker.Data.data_name)
  return data_name_.GetNoArena();
}
void Data::set_data_name(const ::std::string& value) {
  set_has_data_name();
  data_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Broker.Data.data_name)
}
#if LANG_CXX11
void Data::set_data_name(::std::string&& value) {
  set_has_data_name();
  data_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Broker.Data.data_name)
}
#endif
void Data::set_data_name(const char* value) {
  set_has_data_name();
  data_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Broker.Data.data_name)
}
void Data::set_data_name(const char* value, size_t size) {
  set_has_data_name();
  data_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Broker.Data.data_name)
}
::std::string* Data::mutable_data_name() {
  set_has_data_name();
  // @@protoc_insertion_point(field_mutable:Broker.Data.data_name)
  return data_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Data::release_data_name() {
  // @@protoc_insertion_point(field_release:Broker.Data.data_name)
  clear_has_data_name();
  return data_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Data::set_allocated_data_name(::std::string* data_name) {
  if (data_name != NULL) {
    set_has_data_name();
  } else {
    clear_has_data_name();
  }
  data_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_name);
  // @@protoc_insertion_point(field_set_allocated:Broker.Data.data_name)
}

// required .Broker.DataType data_type = 2 [default = INT32];
bool Data::has_data_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Data::set_has_data_type() {
  _has_bits_[0] |= 0x00000004u;
}
void Data::clear_has_data_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void Data::clear_data_type() {
  data_type_ = 0;
  clear_has_data_type();
}
::Broker::DataType Data::data_type() const {
  // @@protoc_insertion_point(field_get:Broker.Data.data_type)
  return static_cast< ::Broker::DataType >(data_type_);
}
void Data::set_data_type(::Broker::DataType value) {
  assert(::Broker::DataType_IsValid(value));
  set_has_data_type();
  data_type_ = value;
  // @@protoc_insertion_point(field_set:Broker.Data.data_type)
}

// optional int32 data_int32 = 3;
bool Data::has_data_int32() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Data::set_has_data_int32() {
  _has_bits_[0] |= 0x00000008u;
}
void Data::clear_has_data_int32() {
  _has_bits_[0] &= ~0x00000008u;
}
void Data::clear_data_int32() {
  data_int32_ = 0;
  clear_has_data_int32();
}
::google::protobuf::int32 Data::data_int32() const {
  // @@protoc_insertion_point(field_get:Broker.Data.data_int32)
  return data_int32_;
}
void Data::set_data_int32(::google::protobuf::int32 value) {
  set_has_data_int32();
  data_int32_ = value;
  // @@protoc_insertion_point(field_set:Broker.Data.data_int32)
}

// optional double data_double = 4;
bool Data::has_data_double() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Data::set_has_data_double() {
  _has_bits_[0] |= 0x00000010u;
}
void Data::clear_has_data_double() {
  _has_bits_[0] &= ~0x00000010u;
}
void Data::clear_data_double() {
  data_double_ = 0;
  clear_has_data_double();
}
double Data::data_double() const {
  // @@protoc_insertion_point(field_get:Broker.Data.data_double)
  return data_double_;
}
void Data::set_data_double(double value) {
  set_has_data_double();
  data_double_ = value;
  // @@protoc_insertion_point(field_set:Broker.Data.data_double)
}

// optional bool data_bool = 5;
bool Data::has_data_bool() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Data::set_has_data_bool() {
  _has_bits_[0] |= 0x00000020u;
}
void Data::clear_has_data_bool() {
  _has_bits_[0] &= ~0x00000020u;
}
void Data::clear_data_bool() {
  data_bool_ = false;
  clear_has_data_bool();
}
bool Data::data_bool() const {
  // @@protoc_insertion_point(field_get:Broker.Data.data_bool)
  return data_bool_;
}
void Data::set_data_bool(bool value) {
  set_has_data_bool();
  data_bool_ = value;
  // @@protoc_insertion_point(field_set:Broker.Data.data_bool)
}

// optional string data_string = 6;
bool Data::has_data_string() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Data::set_has_data_string() {
  _has_bits_[0] |= 0x00000002u;
}
void Data::clear_has_data_string() {
  _has_bits_[0] &= ~0x00000002u;
}
void Data::clear_data_string() {
  data_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data_string();
}
const ::std::string& Data::data_string() const {
  // @@protoc_insertion_point(field_get:Broker.Data.data_string)
  return data_string_.GetNoArena();
}
void Data::set_data_string(const ::std::string& value) {
  set_has_data_string();
  data_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Broker.Data.data_string)
}
#if LANG_CXX11
void Data::set_data_string(::std::string&& value) {
  set_has_data_string();
  data_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Broker.Data.data_string)
}
#endif
void Data::set_data_string(const char* value) {
  set_has_data_string();
  data_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Broker.Data.data_string)
}
void Data::set_data_string(const char* value, size_t size) {
  set_has_data_string();
  data_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Broker.Data.data_string)
}
::std::string* Data::mutable_data_string() {
  set_has_data_string();
  // @@protoc_insertion_point(field_mutable:Broker.Data.data_string)
  return data_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Data::release_data_string() {
  // @@protoc_insertion_point(field_release:Broker.Data.data_string)
  clear_has_data_string();
  return data_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Data::set_allocated_data_string(::std::string* data_string) {
  if (data_string != NULL) {
    set_has_data_string();
  } else {
    clear_has_data_string();
  }
  data_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_string);
  // @@protoc_insertion_point(field_set_allocated:Broker.Data.data_string)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataCollection::kTimestampFieldNumber;
const int DataCollection::kProviderNameFieldNumber;
const int DataCollection::kDataProvidedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataCollection::DataCollection()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Broker.DataCollection)
}
DataCollection::DataCollection(const DataCollection& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      data_provided_(from.data_provided_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  provider_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_provider_name()) {
    provider_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.provider_name_);
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:Broker.DataCollection)
}

void DataCollection::SharedCtor() {
  _cached_size_ = 0;
  provider_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = GOOGLE_ULONGLONG(0);
}

DataCollection::~DataCollection() {
  // @@protoc_insertion_point(destructor:Broker.DataCollection)
  SharedDtor();
}

void DataCollection::SharedDtor() {
  provider_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DataCollection::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataCollection::descriptor() {
  protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_data_2eproto::file_level_metadata[3].descriptor;
}

const DataCollection& DataCollection::default_instance() {
  protobuf_data_2eproto::InitDefaults();
  return *internal_default_instance();
}

DataCollection* DataCollection::New(::google::protobuf::Arena* arena) const {
  DataCollection* n = new DataCollection;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DataCollection::Clear() {
// @@protoc_insertion_point(message_clear_start:Broker.DataCollection)
  data_provided_.Clear();
  if (has_provider_name()) {
    GOOGLE_DCHECK(!provider_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*provider_name_.UnsafeRawStringPointer())->clear();
  }
  timestamp_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DataCollection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Broker.DataCollection)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 timestamp = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string provider_name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_provider_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->provider_name().data(), this->provider_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Broker.DataCollection.provider_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Broker.Data data_provided = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(26u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data_provided()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Broker.DataCollection)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Broker.DataCollection)
  return false;
#undef DO_
}

void DataCollection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Broker.DataCollection)
  // required uint64 timestamp = 1;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->timestamp(), output);
  }

  // optional string provider_name = 2;
  if (has_provider_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->provider_name().data(), this->provider_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Broker.DataCollection.provider_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->provider_name(), output);
  }

  // repeated .Broker.Data data_provided = 3;
  for (unsigned int i = 0, n = this->data_provided_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->data_provided(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Broker.DataCollection)
}

::google::protobuf::uint8* DataCollection::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Broker.DataCollection)
  // required uint64 timestamp = 1;
  if (has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->timestamp(), target);
  }

  // optional string provider_name = 2;
  if (has_provider_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->provider_name().data(), this->provider_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Broker.DataCollection.provider_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->provider_name(), target);
  }

  // repeated .Broker.Data data_provided = 3;
  for (unsigned int i = 0, n = this->data_provided_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->data_provided(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Broker.DataCollection)
  return target;
}

size_t DataCollection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Broker.DataCollection)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required uint64 timestamp = 1;
  if (has_timestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());
  }
  // repeated .Broker.Data data_provided = 3;
  {
    unsigned int count = this->data_provided_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data_provided(i));
    }
  }

  // optional string provider_name = 2;
  if (has_provider_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->provider_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataCollection::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Broker.DataCollection)
  GOOGLE_DCHECK_NE(&from, this);
  const DataCollection* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataCollection>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Broker.DataCollection)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Broker.DataCollection)
    MergeFrom(*source);
  }
}

void DataCollection::MergeFrom(const DataCollection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Broker.DataCollection)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_provided_.MergeFrom(from.data_provided_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_provider_name()) {
      set_has_provider_name();
      provider_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.provider_name_);
    }
    if (from.has_timestamp()) {
      set_timestamp(from.timestamp());
    }
  }
}

void DataCollection::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Broker.DataCollection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataCollection::CopyFrom(const DataCollection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Broker.DataCollection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataCollection::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->data_provided())) return false;
  return true;
}

void DataCollection::Swap(DataCollection* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataCollection::InternalSwap(DataCollection* other) {
  data_provided_.UnsafeArenaSwap(&other->data_provided_);
  provider_name_.Swap(&other->provider_name_);
  std::swap(timestamp_, other->timestamp_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DataCollection::GetMetadata() const {
  protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_data_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DataCollection

// required uint64 timestamp = 1;
bool DataCollection::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DataCollection::set_has_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
void DataCollection::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
void DataCollection::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_timestamp();
}
::google::protobuf::uint64 DataCollection::timestamp() const {
  // @@protoc_insertion_point(field_get:Broker.DataCollection.timestamp)
  return timestamp_;
}
void DataCollection::set_timestamp(::google::protobuf::uint64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:Broker.DataCollection.timestamp)
}

// optional string provider_name = 2;
bool DataCollection::has_provider_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DataCollection::set_has_provider_name() {
  _has_bits_[0] |= 0x00000001u;
}
void DataCollection::clear_has_provider_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void DataCollection::clear_provider_name() {
  provider_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_provider_name();
}
const ::std::string& DataCollection::provider_name() const {
  // @@protoc_insertion_point(field_get:Broker.DataCollection.provider_name)
  return provider_name_.GetNoArena();
}
void DataCollection::set_provider_name(const ::std::string& value) {
  set_has_provider_name();
  provider_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Broker.DataCollection.provider_name)
}
#if LANG_CXX11
void DataCollection::set_provider_name(::std::string&& value) {
  set_has_provider_name();
  provider_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Broker.DataCollection.provider_name)
}
#endif
void DataCollection::set_provider_name(const char* value) {
  set_has_provider_name();
  provider_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Broker.DataCollection.provider_name)
}
void DataCollection::set_provider_name(const char* value, size_t size) {
  set_has_provider_name();
  provider_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Broker.DataCollection.provider_name)
}
::std::string* DataCollection::mutable_provider_name() {
  set_has_provider_name();
  // @@protoc_insertion_point(field_mutable:Broker.DataCollection.provider_name)
  return provider_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DataCollection::release_provider_name() {
  // @@protoc_insertion_point(field_release:Broker.DataCollection.provider_name)
  clear_has_provider_name();
  return provider_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DataCollection::set_allocated_provider_name(::std::string* provider_name) {
  if (provider_name != NULL) {
    set_has_provider_name();
  } else {
    clear_has_provider_name();
  }
  provider_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), provider_name);
  // @@protoc_insertion_point(field_set_allocated:Broker.DataCollection.provider_name)
}

// repeated .Broker.Data data_provided = 3;
int DataCollection::data_provided_size() const {
  return data_provided_.size();
}
void DataCollection::clear_data_provided() {
  data_provided_.Clear();
}
const ::Broker::Data& DataCollection::data_provided(int index) const {
  // @@protoc_insertion_point(field_get:Broker.DataCollection.data_provided)
  return data_provided_.Get(index);
}
::Broker::Data* DataCollection::mutable_data_provided(int index) {
  // @@protoc_insertion_point(field_mutable:Broker.DataCollection.data_provided)
  return data_provided_.Mutable(index);
}
::Broker::Data* DataCollection::add_data_provided() {
  // @@protoc_insertion_point(field_add:Broker.DataCollection.data_provided)
  return data_provided_.Add();
}
::google::protobuf::RepeatedPtrField< ::Broker::Data >*
DataCollection::mutable_data_provided() {
  // @@protoc_insertion_point(field_mutable_list:Broker.DataCollection.data_provided)
  return &data_provided_;
}
const ::google::protobuf::RepeatedPtrField< ::Broker::Data >&
DataCollection::data_provided() const {
  // @@protoc_insertion_point(field_list:Broker.DataCollection.data_provided)
  return data_provided_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Broker

// @@protoc_insertion_point(global_scope)
